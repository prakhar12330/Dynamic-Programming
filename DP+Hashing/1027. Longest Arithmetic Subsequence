//Recursive Approach
class Solution {
public:
    
    
    //We are using recursive function for backward check
    int solveRecurr(int idx,int dfrnc,vector<int>& nums)
    {
        //Base Case
        if(idx<0)return 0;
        
        int ans=0;
        for(int j=idx-1;j>=0;j--)
        {
            if(nums[idx]-nums[j]==dfrnc)
            {
                ans=max(ans,1+solveRecurr(j,dfrnc,nums));
            }
        }
        return ans;
    }
    int longestArithSeqLength(vector<int>& nums)
    {
        int n=nums.size();
        if(n<=2)return n;
        
        int lngth=0;
        for(int i=0;i<n;i++)
        {
            for(int j=i+1;j<n;j++)
            {
               lngth=max(lngth,2+solveRecurr(i,nums[j]-nums[i],nums));
            }
        }
        return lngth;
    }
};
